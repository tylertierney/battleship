{"version":3,"sources":["context/GameContext.tsx","helperFunctions.tsx","context/ShipConstructor.tsx","context/ShipContext.tsx","components/Square/EmptyTile.tsx","components/GridOverlay/GridOverlay.tsx","components/Square/ShipTile.tsx","components/Square/EndPiece.tsx","components/Ocean/Ocean.tsx","components/Instructions/Instructions.tsx","components/Waves/Waves.tsx","App.tsx","index.tsx"],"names":["initialOcean","Array","fill","map","OceanContext","React","createContext","OceanProvider","children","useReducer","state","action","type","payload","ocean","dispatch","ctx","enterCoordinates","coordinates","copyOfOcean","enterShips","arr","orientation","i","length","xVal","coords","yVal","confirmShipPlacement","Provider","value","useBattleship","useContext","Ship","name","mainX","mainY","coordinateArray","isCurrent","this","initialShips","ShipContext","ShipProvider","ships","currentShip","updateCurrentShip","method","copyOfShips","setCurrentShip","ship","useShip","EmptyTile","squareValue","isHovering","setIsHovering","shipTile","style","width","height","backgroundColor","inner","targetX","targetY","isHit","getCoordArrayFromShip","handleClick","result","shipCoordX","shipCoordY","checkIfShipOutOfBounds","onClick","onMouseEnter","onMouseLeave","display","justifyContent","alignItems","cursor","overflow","GridOverlay","columns","rows","borderRight","borderBottom","push","position","top","left","flexDirection","ShipTile","border","EndPiece","direction","className","Ocean","useState","letters","numbers","color","opacity","String","fromCharCode","j","item","index1","index2","Instructions","marginBottom","margin","listStyleType","fontSize","textDecoration","marginRight","size","Waves","vantaEffect","setVantaEffect","myRef","useRef","useEffect","WAVES","el","current","mouseControls","touchControls","gyroControls","minHeight","minWidth","scale","scaleMobile","waveHeight","waveSpeed","zoom","destroy","isEnteringShips","ref","App","threeScript","document","createElement","setAttribute","getElementsByTagName","appendChild","remove","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c6cb1cf6.chunk.js","sourcesContent":["import React, { useContext, useReducer } from \"react\";\n\nimport { confirmShipPlacement } from \"../helperFunctions\";\n\nimport { ShipInterface } from \"./ShipContext\";\n\nconst initialOcean: any = Array(8)\n  .fill(0)\n  .map(() => Array(8).fill(0));\n\nconst OceanContext = React.createContext(initialOcean);\n\nconst OceanProvider = ({ children }: any) => {\n  const reducer = (state: any, action: any) => {\n    switch (action.type) {\n      case \"enterCoordinates\":\n        return action.payload;\n      case \"enterShips\":\n        return action.payload;\n    }\n  };\n\n  const [ocean, dispatch] = useReducer(reducer, initialOcean);\n\n  const enterCoordinates = (coordinates: number[]) => {\n    const copyOfOcean = [...ocean];\n\n    dispatch({ type: \"enterCoordinates\", payload: copyOfOcean });\n  };\n\n  const enterShips = (arr: any, orientation: any) => {\n    let copyOfOcean = [...ocean];\n\n    copyOfOcean = confirmShipPlacement(copyOfOcean, arr, orientation);\n\n    dispatch({ type: \"enterShips\", payload: copyOfOcean });\n  };\n\n  const ctx = {\n    ocean,\n    enterCoordinates,\n    enterShips,\n  };\n\n  return <OceanContext.Provider value={ctx}>{children}</OceanContext.Provider>;\n};\n\nexport default OceanProvider;\n\nexport const useBattleship = () => useContext(OceanContext);\n","import { ShipInterface } from \"./context/ShipContext\";\n\nimport { Ship } from \"./context/ShipConstructor\";\n\nexport const confirmShipPlacement = (\n  copyOfOcean: any,\n  arr: any,\n  orientation: any\n) => {\n  for (let i = 0; i < arr.length; i++) {\n    let xVal = arr[i].coords[0];\n    let yVal = arr[i].coords[1];\n\n    // If the tile is an end piece, determine whether it's up, right, left, or down\n    if (i === 0) {\n      if (orientation === \"Horizontal\") {\n        copyOfOcean[xVal][yVal] = 2;\n      } else {\n        copyOfOcean[xVal][yVal] = 4;\n      }\n    } else if (i === arr.length - 1) {\n      if (orientation === \"Horizontal\") {\n        copyOfOcean[xVal][yVal] = 3;\n      } else {\n        copyOfOcean[xVal][yVal] = 5;\n      }\n    } else {\n      copyOfOcean[xVal][yVal] = 1;\n    }\n  }\n  return copyOfOcean;\n};\n\nexport const checkIfShipOutOfBounds = (\n  arr: any,\n  shipTile: any,\n  inner: any,\n  handleClick: any,\n  coordinates: any,\n  ocean: any\n) => {\n  for (let i = 0; i < arr.length; i++) {\n    const shipCoordX = arr[i].coords[0];\n    const shipCoordY = arr[i].coords[1];\n\n    // This checks if a square is \"beneath\" the ship while it is hovering\n    if (shipCoordX === coordinates[0] && shipCoordY === coordinates[1]) {\n      inner = shipTile;\n    }\n\n    // This checks if any of the squares on the ship are out of bounds\n    if (shipCoordX < 0 || shipCoordX > 7) {\n      return { inner: null, handleClick: null };\n    }\n    if (shipCoordY < 0 || shipCoordY > 7) {\n      return { inner: null, handleClick: null };\n    }\n\n    if (ocean[shipCoordX][shipCoordY] != 0) {\n      inner = null;\n      handleClick = null;\n    }\n  }\n\n  return { inner, handleClick };\n};\n\nexport const getCoordArrayFromShip: any = (\n  length: number,\n  orientation: string,\n  targetX: number | null,\n  targetY: number | null\n) => {\n  if (targetX === null || targetY === null) {\n    return null;\n  }\n\n  let arr = Array(length).fill(0);\n  if (orientation === \"Vertical\") {\n    for (let i = -1; i < arr.length - 1; i++) {\n      arr[i + 1] = {\n        coords: [targetX + i, targetY],\n        isHit: false,\n      };\n    }\n  } else {\n    for (let i = -1; i < arr.length - 1; i++) {\n      arr[i + 1] = {\n        coords: [targetX, targetY + i],\n        isHit: false,\n      };\n    }\n  }\n  return arr;\n};\n\n// export const determineBorderBottom = (index1: number) => {\n//   if (index1 === 7) {\n//     return \"noBorderBottom\";\n//   }\n//   return \"borderBottom\";\n// };\n\n// export const determineBorderRight = (index2: number) => {\n//   if (index2 === 7) {\n//     return \"noBorderRight\";\n//   }\n//   return \"borderRight\";\n// };\n","export class Ship {\n  name: string;\n  length: number;\n  orientation: string;\n  mainX: number | null;\n  mainY: number | null;\n  coordinateArray: number[][] | null;\n  isCurrent: boolean;\n\n  constructor(\n    name: string,\n    length: number,\n    orientation: string,\n    mainX: number | null,\n    mainY: number | null,\n    coordinateArray: number[][] | null,\n    isCurrent: boolean\n  ) {\n    this.name = name;\n    this.length = length;\n    this.orientation = orientation;\n    this.mainX = mainX;\n    this.mainY = mainY;\n    this.coordinateArray = coordinateArray;\n    this.isCurrent = isCurrent;\n  }\n}\n","import React, { useContext, useReducer } from \"react\";\n\nimport { Ship } from \"./ShipConstructor\";\n\nexport interface ShipInterface {\n  /**\n   * Name must be a string.\n   */\n  name: string;\n  /**\n   * Length must be an int;\n   */\n  length: number;\n  /**\n   * Orientation must be a string.\n   */\n  orientation: string;\n  /**\n   * MainX is the X value of the user-selected tile upon which to place the ship.\n   */\n  mainX: number | null;\n  /**\n   * MainY is the Y value of the user-selected tile upon which to place the ship.\n   */\n  mainY: number | null;\n  /**\n   * Coordinate Array is an array of arrays, each signifying coordinates\n   * where the ship is placed\n   */\n  coordinateArray: any[][];\n}\n\nconst initialShips: any = [\n  new Ship(\"Battleship\", 4, \"Horizontal\", null, null, null, true),\n  new Ship(\"Carrier\", 5, \"Horizontal\", null, null, null, false),\n  new Ship(\"Cruiser\", 3, \"Horizontal\", null, null, null, false),\n  new Ship(\"Submarine\", 3, \"Horizontal\", null, null, null, false),\n  new Ship(\"Destroyer\", 2, \"Horizontal\", null, null, null, false),\n];\n\nconst ShipContext = React.createContext(initialShips);\n\nconst ShipProvider = ({ children }: any) => {\n  const reducer = (state: any, action: any) => {\n    switch (action.type) {\n      case \"setCurrentShip\":\n        return action.payload;\n      case \"updateCurrentShip\":\n        return action.payload;\n    }\n  };\n\n  const [ships, dispatch] = useReducer(reducer, initialShips);\n\n  const setCurrentShip = (ship: ShipInterface) => {\n    let copyOfShips = [...ships];\n\n    for (let i = 0; i < copyOfShips.length; i++) {\n      if (ship.name === copyOfShips[i].name) {\n        if (i === copyOfShips.length - 1) {\n          // copyOfShips[i].isCurrent = false;\n          // copyOfShips[0].isCurrent = true;\n          dispatch({ type: \"setCurrentShip\", payload: copyOfShips });\n          return;\n        }\n        copyOfShips[i].isCurrent = false;\n        copyOfShips[i + 1].isCurrent = true;\n\n        dispatch({ type: \"setCurrentShip\", payload: copyOfShips });\n        return;\n      } else {\n        copyOfShips[i].isCurrent = false;\n      }\n    }\n  };\n\n  const updateCurrentShip = (method: string, arr: any) => {\n    let currentShip;\n    let copyOfShips = [...ships];\n    for (let i = 0; i < copyOfShips.length; i++) {\n      if (copyOfShips[i].isCurrent) {\n        currentShip = copyOfShips[i];\n\n        switch (method) {\n          case \"changeOrientation\":\n            if (currentShip.orientation === \"Vertical\") {\n              currentShip.orientation = \"Horizontal\";\n            } else {\n              currentShip.orientation = \"Vertical\";\n            }\n\n            dispatch({ type: \"updateCurrentShip\", payload: copyOfShips });\n            break;\n          case \"updateCoords\":\n            currentShip.coordinateArray = arr;\n            dispatch({ type: \"updateCurrentShip\", payload: copyOfShips });\n            break;\n          default:\n          // do something\n        }\n      }\n    }\n  };\n\n  const getCurrentShip = () => {\n    for (let i = 0; i < ships.length; i++) {\n      if (ships[i].isCurrent) {\n        return ships[i];\n      }\n    }\n  };\n\n  const ctx = {\n    currentShip: getCurrentShip,\n    updateCurrentShip,\n    setCurrentShip,\n    ships,\n  };\n\n  return <ShipContext.Provider value={ctx}>{children}</ShipContext.Provider>;\n};\n\nexport default ShipProvider;\n\nexport const useShip = () => useContext(ShipContext);\n","import { useBattleship } from \"../../context/GameContext\";\n\nimport { ShipInterface, useShip } from \"../../context/ShipContext\";\n\nimport \"../../App.css\";\n\nimport {\n  checkIfShipOutOfBounds,\n  getCoordArrayFromShip,\n} from \"../../helperFunctions\";\n\ninterface SquareProps {\n  squareValue: number;\n  coordinates: number[];\n  isHovering: any[];\n  setIsHovering: Function;\n}\n\nconst EmptyTile: React.FC<SquareProps> = ({\n  squareValue,\n  coordinates,\n  isHovering,\n  setIsHovering,\n}) => {\n  let { ships, currentShip, setCurrentShip, updateCurrentShip } = useShip();\n\n  currentShip = currentShip();\n\n  const { ocean, enterShips } = useBattleship();\n\n  const shipTile = (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"var(--shipColor)\",\n      }}\n    ></div>\n  );\n\n  let inner: any = null;\n  let arr = getCoordArrayFromShip(\n    currentShip.length,\n    currentShip.orientation,\n    isHovering[0],\n    isHovering[1]\n  );\n\n  let handleClick: any = () => {\n    enterShips(arr, currentShip.orientation);\n    updateCurrentShip(\"updateCoords\", arr);\n    setCurrentShip(currentShip);\n  };\n\n  if (arr) {\n    let result = checkIfShipOutOfBounds(\n      arr,\n      shipTile,\n      inner,\n      handleClick,\n      coordinates,\n      ocean\n    );\n    inner = result.inner;\n    handleClick = result.handleClick;\n  }\n\n  if (squareValue === 1 || squareValue === 2) {\n    inner = shipTile;\n  }\n\n  return (\n    <div\n      onClick={handleClick}\n      onMouseEnter={() => setIsHovering([...coordinates])}\n      onMouseLeave={() => setIsHovering([null, null])}\n      style={{\n        width: \"50px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        cursor: \"pointer\",\n        overflow: \"hidden\",\n      }}\n    >\n      {inner}\n    </div>\n  );\n};\n\nexport default EmptyTile;\n","const GridOverlay = () => {\n  let columns: any = [];\n  let rows: any = [];\n\n  for (let i = 0; i < 8; i++) {\n    let borderRight = \"2px solid white\";\n    let borderBottom = \"2px solid white\";\n\n    if (i === 7) {\n      borderRight = \"none\";\n      borderBottom = \"none\";\n    }\n    columns.push(\n      <div\n        style={{\n          width: \"50px\",\n          height: \"100%\",\n          borderRight,\n        }}\n      ></div>\n    );\n    rows.push(\n      <div style={{ width: \"100%\", height: \"50%\", borderBottom }}></div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        width: \"400px\",\n        height: \"400px\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        backgroundColor: \"transparent\",\n      }}\n    >\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"400px\",\n          height: \"400px\",\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n        }}\n      >\n        {columns}\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n        }}\n      >\n        {rows}\n      </div>\n    </div>\n  );\n};\n\nexport default GridOverlay;\n","import \"../../App.css\";\n\ninterface ShipTileProps {\n  //   borderRight: string;\n  //   borderBottom: string;\n}\nconst ShipTile: React.FC<ShipTileProps> = () => {\n  return (\n    <div\n      style={{\n        width: \"50px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        cursor: \"pointer\",\n        backgroundColor: \"var(--shipColor)\",\n        border: \"2px solid var(--shipColor)\",\n        overflow: \"hidden\",\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: \"var(--shipColor)\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default ShipTile;\n","import \"../../App.css\";\n\n// import { useBattleship } from \"../../context/GameContext\";\n\ninterface EndPieceProps {\n  coordinates: number[];\n  squareValue: number;\n}\nconst EndPiece: React.FC<EndPieceProps> = ({ coordinates, squareValue }) => {\n  let direction;\n  let borderRight = \"none\";\n  let borderBottom = \"none\";\n\n  switch (squareValue) {\n    case 2:\n      direction = \"pointLeft\";\n      break;\n    case 3:\n      direction = \"pointRight\";\n      borderRight = \"2px solid white\";\n      break;\n    case 4:\n      direction = \"pointUp\";\n      borderRight = \"2px solid white\";\n      break;\n    case 5:\n      direction = \"pointDown\";\n      break;\n    default:\n      direction = \"pointLeft\";\n  }\n\n  if (coordinates[1] === 7) {\n    borderRight = \"none\";\n  }\n\n  return (\n    <div\n      style={{\n        height: \"95%\",\n        width: \"50px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <div className={`endPiece ${direction}`}></div>\n    </div>\n  );\n};\n\nexport default EndPiece;\n","import { useBattleship } from \"../../context/GameContext\";\nimport { useShip } from \"../../context/ShipContext\";\n\nimport \"../../App.css\";\n\nimport EmptyTile from \"../Square/EmptyTile\";\n\nimport { useState } from \"react\";\n\nimport GridOverlay from \"../GridOverlay/GridOverlay\";\n\n// import {\n//   determineBorderBottom,\n//   determineBorderRight,\n// } from \"../../helperFunctions\";\nimport ShipTile from \"../Square/ShipTile\";\nimport EndPiece from \"../Square/EndPiece\";\n\nconst Ocean: React.FC = () => {\n  const { ocean } = useBattleship();\n\n  const { ships } = useShip();\n\n  const [isHovering, setIsHovering] = useState([null, null]);\n\n  let letters = [];\n  let numbers = [];\n\n  for (let i = 0; i < 9; i++) {\n    if (i === 0) {\n      letters.push(\n        <div\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            color: \"white\",\n            opacity: \"0.5\",\n          }}\n        ></div>\n      );\n    } else {\n      letters.push(\n        <div\n          style={{\n            height: \"100%\",\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            color: \"white\",\n            opacity: \"0.5\",\n          }}\n        >\n          {String.fromCharCode(i - 1 + 65)}\n        </div>\n      );\n    }\n  }\n\n  for (let j = 0; j < 8; j++) {\n    numbers.push(\n      <div\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          color: \"white\",\n          opacity: \"0.5\",\n        }}\n      >\n        {j + 1}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n      }}\n    >\n      <div style={{ height: \"50px\", width: \"450px\", display: \"flex\" }}>\n        {letters}\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", height: \"400px\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"50px\",\n            height: \"100%\",\n          }}\n        >\n          {numbers}\n        </div>\n        <div style={{ height: \"400px\", width: \"400px\", position: \"relative\" }}>\n          <GridOverlay />\n          {ocean.map((item: any, index1: any) => {\n            return (\n              <div\n                key={index1}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  width: \"100%\",\n                  position: \"relative\",\n                  height: \"50px\",\n                }}\n              >\n                {item.map((item: any, index2: any) => {\n                  const coordinates = [index1, index2];\n\n                  switch (item) {\n                    case 0:\n                      return (\n                        <EmptyTile\n                          key={index2}\n                          coordinates={coordinates}\n                          squareValue={item}\n                          isHovering={isHovering}\n                          setIsHovering={setIsHovering}\n                        />\n                      );\n                    case 1:\n                      return <ShipTile key={index2} />;\n                    default:\n                      return (\n                        <EndPiece\n                          key={index2}\n                          coordinates={coordinates}\n                          squareValue={item}\n                        />\n                      );\n                  }\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Ocean;\n","import { useShip } from \"../../context/ShipContext\";\n\nimport { BiRefresh } from \"react-icons/bi\";\n\n// import { getCurrentShip } from \"../../helperFunctions\";\n\nconst Instructions: React.FC = () => {\n  let { ships, currentShip, updateCurrentShip } = useShip();\n\n  currentShip = currentShip();\n\n  const { name, length, orientation } = currentShip;\n\n  return (\n    <div\n      style={{\n        marginBottom: \"10px\",\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"white\",\n      }}\n    >\n      <h1 style={{ margin: \"8px\" }}>\n        Place your&nbsp;\n        <span\n          style={{\n            borderBottom: \"2px solid white\",\n          }}\n        >\n          {name}\n        </span>\n      </h1>\n      <ul style={{ listStyleType: \"none\", width: \"400px\" }}>\n        <li\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <span>Length:</span>\n          <span style={{ fontSize: \"1.3rem\" }}>{length}&nbsp;tiles</span>\n        </li>\n        <li\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <span>Orientation:</span>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <span\n              style={{\n                textDecoration: \"underline\",\n                marginRight: \"10px\",\n                fontSize: \"1.3rem\",\n              }}\n            >\n              {orientation}\n            </span>\n            <button\n              onClick={() => updateCurrentShip(\"changeOrientation\")}\n              className=\"orientationToggle\"\n            >\n              <BiRefresh color=\"white\" size=\"2rem\" />\n            </button>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import { useEffect, useState, useRef } from \"react\";\nimport WAVES from \"vanta/dist/vanta.waves.min.js\";\n\nimport Ocean from \"../Ocean/Ocean\";\nimport Instructions from \"../Instructions/Instructions\";\n\nimport { useShip } from \"../../context/ShipContext\";\n\nconst Waves = () => {\n  const [vantaEffect, setVantaEffect] = useState<any>(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        WAVES({\n          el: myRef.current,\n          mouseControls: false,\n          touchControls: false,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          scale: 1.0,\n          scaleMobile: 1.0,\n          color: 0x191b1e,\n          waveHeight: 30.0,\n          waveSpeed: 0.25,\n          zoom: 0.81,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) vantaEffect.destroy();\n    };\n  }, [vantaEffect]);\n\n  const [isEnteringShips, setIsEnteringShips] = useState(true);\n\n  return (\n    <div\n      ref={myRef}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        width: \"100vw\",\n        height: \"700px\",\n      }}\n    >\n      {isEnteringShips ? <Instructions /> : null}\n      <Ocean />\n    </div>\n    // <div\n    //   style={{\n    //     display: \"flex\",\n    //     flexDirection: \"column\",\n    //     justifyContent: \"flex-start\",\n    //     alignItems: \"center\",\n    //     width: \"100vw\",\n    //     height: \"700px\",\n    //     backgroundColor: \"#12242f\",\n    //   }}\n    // >\n    //   {isEnteringShips ? <Instructions /> : null}\n    //   <Ocean />\n    // </div>\n  );\n};\n\nexport default Waves;\n","import OceanProvider from \"./context/GameContext\";\n\nimport ShipProvider from \"./context/ShipContext\";\n\nimport { useEffect } from \"react\";\n\nimport Waves from \"./components/Waves/Waves\";\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    const threeScript = document.createElement(\"script\");\n    threeScript.setAttribute(\"id\", \"threeScript\");\n    threeScript.setAttribute(\n      \"src\",\n      \"https://cdnjs.cloudflare.com/ajax/libs/three.js/r121/three.min.js\"\n    );\n\n    document.getElementsByTagName(\"head\")[0].appendChild(threeScript);\n\n    return () => {\n      if (threeScript) threeScript.remove();\n    };\n  }, []);\n\n  return (\n    <OceanProvider>\n      <ShipProvider>\n        {/* some */}\n        <Waves />\n      </ShipProvider>\n    </OceanProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}