{"version":3,"sources":["helperFunctions.tsx","context/OceanContext.tsx","context/ShipConstructor.tsx","context/ShipContext.tsx","context/SquareSize.tsx","components/Instructions/ShipPlacementInstructions.tsx","components/Instructions/GameInstructions.tsx","context/GameContext.tsx","components/Instructions/Instructions.tsx","components/Numbers/Numbers.tsx","components/Letters/Letters.tsx","components/Square/EmptyTile.tsx","components/GridOverlay/GridOverlay.tsx","components/Square/ShipTile.tsx","components/Square/EndPiece.tsx","components/HoveredShip/HoveredShip.tsx","components/Ocean/Ocean.tsx","components/Gameboard/UserGameboard.tsx","components/TargetCursor/TargetCursor.tsx","components/Square/UnknownTile.tsx","components/Ocean/ComputerOcean.tsx","components/Gameboard/ComputerGameboard.tsx","components/Waves/Waves.tsx","App.tsx","index.tsx"],"names":["checkIfShipOutOfBounds","arr","shipTile","inner","handleClick","coordinates","ocean","i","length","shipCoordX","coords","shipCoordY","style","width","height","backgroundColor","zIndex","handleHover","e","ref","oceanOffsetX","oceanOffsetY","target","x","clientX","y","clientY","current","top","left","handleMouseEnter","display","visibility","handleMouseLeave","initialOcean","Array","fill","map","computerOcean","checkForVerticalShipCollision","row","column","j","ships","name","values","orientation","ship","random","Math","floor","thisShip","possibleRows","randomVal","splice","m","randomRow","randomColumn","spotIsFound","z","generateComputerOcean","OceanContext","React","createContext","OceanProvider","children","useReducer","state","action","type","payload","dispatch","ctx","enterShips","copyOfOcean","xVal","yVal","confirmShipPlacement","Provider","value","useOceanContext","useContext","Ship","coordinateArray","isCurrent","this","initialShips","ShipContext","ShipProvider","currentShip","updateCurrentShip","method","copyOfShips","setCurrentShip","useShip","SquareContext","SquareSizeProvider","useState","squareSize","setSquareSize","useSquareSize","ShipPlacementInstructions","margin","className","borderBottom","listStyleType","minWidth","maxWidth","padding","alignItems","justifyContent","marginBottom","textDecoration","marginRight","onClick","color","size","GameInstructions","minHeight","initial","phase","GameContext","GameContextProvider","gameInfo","changeGamePhase","copyOfGameInfo","useGameContext","Instructions","flexDirection","Numbers","numbers","push","opacity","Letters","letters","String","fromCharCode","EmptyTile","squareValue","isHovering","setIsHovering","placementIsDisabled","setPlacementIsDisabled","targetX","targetY","isHit","getCoordArrayFromShip","useEffect","result","JSON","stringify","result2","onMouseEnter","onMouseLeave","undefined","overflow","cursor","GridOverlay","columns","rows","borderRight","position","ShipTile","shipColor","EndPiece","direction","borderColor","HoveredShip","hoverRef","pieces","hoveredShipColor","resultArr","item","index","transform","Ocean","oceanRef","useRef","onMouseMove","index1","index2","UserGameboard","setOceanOffsetX","setOceanOffsetY","window","innerWidth","getBoundingClientRect","styles","transition","TargetCursor","UnknownTile","setInner","missedShot","borderRadius","border","hitShot","ComputerOcean","ComputerGameboard","Waves","vantaEffect","setVantaEffect","myRef","WAVES","el","mouseControls","touchControls","gyroControls","scale","scaleMobile","waveHeight","waveSpeed","zoom","destroy","App","SquareSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a108bfb8.chunk.js","sourcesContent":["import { Ship } from \"./context/ShipConstructor\";\n\nexport const confirmShipPlacement = (\n  copyOfOcean: any,\n  arr: any,\n  orientation: any\n) => {\n  for (let i = 0; i < arr.length; i++) {\n    let xVal = arr[i].coords[0];\n    let yVal = arr[i].coords[1];\n\n    // If the tile is an end piece, determine whether it's up, right, left, or down\n    if (i === 0) {\n      if (orientation === \"Horizontal\") {\n        copyOfOcean[xVal][yVal] = 2;\n      } else {\n        copyOfOcean[xVal][yVal] = 4;\n      }\n    } else if (i === arr.length - 1) {\n      if (orientation === \"Horizontal\") {\n        copyOfOcean[xVal][yVal] = 3;\n      } else {\n        copyOfOcean[xVal][yVal] = 5;\n      }\n    } else {\n      copyOfOcean[xVal][yVal] = 1;\n    }\n  }\n  return copyOfOcean;\n};\n\nexport const checkIfShipOutOfBounds = (\n  arr: any,\n  shipTile: any,\n  inner: any,\n  handleClick: any,\n  coordinates: any,\n  ocean: any\n) => {\n  for (let i = 0; i < arr.length; i++) {\n    const shipCoordX = arr[i].coords[0];\n    const shipCoordY = arr[i].coords[1];\n\n    // This checks if a square is \"beneath\" the ship while it is hovering\n    if (shipCoordX === coordinates[0] && shipCoordY === coordinates[1]) {\n      // inner = shipTile;\n      inner = (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgb(0, 0, 0, 0.3)\",\n            zIndex: -1,\n          }}\n        ></div>\n      );\n    }\n\n    // This checks if any of the squares on the ship are out of bounds\n    if (shipCoordX < 0 || shipCoordX > 7) {\n      return { inner: null, handleClick: null };\n    }\n    if (shipCoordY < 0 || shipCoordY > 7) {\n      return { inner: null, handleClick: null };\n    }\n\n    if (ocean[shipCoordX][shipCoordY] != 0) {\n      inner = null;\n      handleClick = null;\n    }\n  }\n\n  return { inner, handleClick };\n};\n\nexport const getCoordArrayFromShip: any = (\n  length: number,\n  orientation: string,\n  targetX: number | null,\n  targetY: number | null\n) => {\n  if (targetX === null || targetY === null) {\n    return null;\n  }\n\n  let arr: any = Array(length).fill(0);\n  if (orientation === \"Vertical\") {\n    for (let i = -1; i < arr.length - 1; i++) {\n      arr[i + 1] = {\n        coords: [targetX + i, targetY],\n        isHit: false,\n      };\n    }\n  } else {\n    for (let i = -1; i < arr.length - 1; i++) {\n      arr[i + 1] = {\n        coords: [targetX, targetY + i],\n        isHit: false,\n      };\n    }\n  }\n  return arr;\n};\n\nexport const handleHover = (\n  e: any,\n  ref: any,\n  oceanOffsetX: any,\n  oceanOffsetY: any\n) => {\n  const target = e.target;\n\n  const x = e.clientX - oceanOffsetX;\n  const y = e.clientY - oceanOffsetY;\n\n  ref = ref.current;\n\n  ref.style.top = y + \"px\";\n  ref.style.left = x + \"px\";\n};\n\nexport const handleMouseEnter = (ref: any) => {\n  if (ref.current) {\n    ref.current.style.display = \"flex\";\n    ref.current.style.visibility = \"visible\";\n  }\n};\n\nexport const handleMouseLeave = (ref: any) => {\n  if (ref.current) {\n    ref.current.style.display = \"none\";\n    ref.current.style.visibility = \"hidden\";\n  }\n};\n\nexport const generateComputerOcean = () => {\n  const checkForVerticalShipCollision = (\n    length: number,\n    ocean: any,\n    row: number,\n    column: number\n  ) => {\n    for (let i = row, j = 0; j < length; j++, i++) {\n      if (i > 7) {\n        return false;\n      }\n      if (ocean[i][column] != 0) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const ships: any = [\n    { name: \"battleship\", values: [2, 1, 1, 3], orientation: \"Horizontal\" },\n    { name: \"carrier\", values: [2, 1, 1, 1, 3], orientation: \"Horizontal\" },\n    { name: \"cruiser\", values: [2, 1, 3], orientation: \"Horizontal\" },\n    { name: \"submarine\", values: [2, 1, 3], orientation: \"Horizontal\" },\n    { name: \"destroyer\", values: [2, 3], orientation: \"Horizontal\" },\n  ];\n\n  // Randomly choose an orientation for each ship\n  for (const ship in ships) {\n    const random: number = Math.floor(Math.random() * 2);\n    const thisShip = ships[ship];\n    // If orientation ends up vertical, change the end pieces\n    if (random) {\n      thisShip.orientation = \"Vertical\";\n      thisShip.values[0] = 4;\n      thisShip.values[thisShip.values.length - 1] = 5;\n    }\n  }\n\n  let ocean = Array(8)\n    .fill(0)\n    .map(() => Array(8).fill(0));\n\n  // Place the horizontal ships randomly\n\n  let possibleRows = [0, 1, 2, 3, 4, 5, 6, 7];\n\n  for (const ship in ships) {\n    const thisShip = ships[ship];\n    const values = thisShip.values;\n    if (thisShip.orientation === \"Horizontal\") {\n      let randomVal = Math.floor(Math.random() * possibleRows.length);\n      let row = possibleRows[randomVal];\n      possibleRows.splice(randomVal, 1);\n      let column = Math.floor(Math.random() * (8 - values.length - 1));\n      for (let j = 0; j < values.length; column++, j++) {\n        ocean[row][column] = values[j];\n      }\n    }\n  }\n  for (let m = 0; m < ships.length; m++) {\n    const thisShip = ships[m];\n    const values = thisShip.values;\n    if (thisShip.orientation === \"Vertical\") {\n      let randomRow = Math.floor(Math.random() * (8 - (values.length - 1)));\n      let randomColumn = Math.floor(Math.random() * 8);\n      let spotIsFound = false;\n\n      for (let i = 0; i < 8; i++) {\n        for (let j = 0; j < 8; j++) {\n          if (\n            checkForVerticalShipCollision(\n              values.length,\n              ocean,\n              randomRow,\n              randomColumn\n            )\n          ) {\n            for (let z = 0; z < values.length; z++, randomRow++) {\n              ocean[randomRow][randomColumn] = values[z];\n            }\n            spotIsFound = true;\n            break;\n          }\n          if (randomColumn === 7) {\n            randomColumn = 0;\n          } else {\n            randomColumn++;\n          }\n        }\n        if (spotIsFound) {\n          break;\n        }\n\n        if (randomRow === 7) {\n          randomRow = 0;\n        } else {\n          randomRow++;\n        }\n      }\n    }\n  }\n\n  return ocean;\n};\n","import React, { useContext, useReducer } from \"react\";\n\nimport {\n  confirmShipPlacement,\n  generateComputerOcean,\n} from \"../helperFunctions\";\n\nimport { ShipInterface } from \"./ShipContext\";\n\nconst initialOcean: any = Array(8)\n  .fill(0)\n  .map(() => Array(8).fill(0));\n\nconst computerOcean: any = generateComputerOcean();\n\nconst OceanContext = React.createContext(initialOcean);\n\nconst OceanProvider = ({ children }: any) => {\n  const reducer = (state: any, action: any) => {\n    switch (action.type) {\n      case \"enterShips\":\n        return action.payload;\n    }\n  };\n\n  const [ocean, dispatch] = useReducer(reducer, initialOcean);\n\n  const enterShips = (arr: any, orientation: any) => {\n    let copyOfOcean = [...ocean];\n\n    copyOfOcean = confirmShipPlacement(copyOfOcean, arr, orientation);\n\n    dispatch({ type: \"enterShips\", payload: copyOfOcean });\n  };\n\n  const ctx = {\n    ocean,\n    enterShips,\n    computerOcean,\n  };\n\n  return <OceanContext.Provider value={ctx}>{children}</OceanContext.Provider>;\n};\n\nexport default OceanProvider;\n\nexport const useOceanContext = () => useContext(OceanContext);\n","export class Ship {\n  name: string;\n  length: number;\n  orientation: string;\n  coordinateArray: number[][] | null;\n  isCurrent: boolean;\n\n  constructor(\n    name: string,\n    length: number,\n    orientation: string,\n    coordinateArray: number[][] | null,\n    isCurrent: boolean\n  ) {\n    this.name = name;\n    this.length = length;\n    this.orientation = orientation;\n    this.coordinateArray = coordinateArray;\n    this.isCurrent = isCurrent;\n  }\n}\n","import React, { useContext, useReducer } from \"react\";\n\nimport { Ship } from \"./ShipConstructor\";\n\nexport interface ShipInterface {\n  /**\n   * Name must be a string.\n   */\n  name: string;\n  /**\n   * Length must be an int;\n   */\n  length: number;\n  /**\n   * Orientation must be a string.\n   */\n  orientation: string;\n  /**\n   * Coordinate Array is an array of arrays, each signifying coordinates\n   * where the ship is placed\n   */\n  coordinateArray: any[][];\n  isCurrent: boolean;\n}\n\nconst initialShips: any = [\n  new Ship(\"Battleship\", 4, \"Horizontal\", null, true),\n  new Ship(\"Carrier\", 5, \"Horizontal\", null, false),\n  new Ship(\"Cruiser\", 3, \"Horizontal\", null, false),\n  new Ship(\"Submarine\", 3, \"Horizontal\", null, false),\n  new Ship(\"Destroyer\", 2, \"Horizontal\", null, false),\n];\n\nconst ShipContext = React.createContext(initialShips);\n\nconst ShipProvider = ({ children }: any) => {\n  const reducer = (state: any, action: any) => {\n    switch (action.type) {\n      case \"setCurrentShip\":\n        return action.payload;\n      case \"updateCurrentShip\":\n        return action.payload;\n    }\n  };\n\n  const [ships, dispatch] = useReducer(reducer, initialShips);\n\n  const setCurrentShip = (ship: ShipInterface) => {\n    let copyOfShips = [...ships];\n\n    for (let i = 0; i < copyOfShips.length; i++) {\n      if (ship.name === copyOfShips[i].name) {\n        if (i === copyOfShips.length - 1) {\n          dispatch({ type: \"setCurrentShip\", payload: copyOfShips });\n          return;\n        }\n        copyOfShips[i].isCurrent = false;\n        copyOfShips[i + 1].isCurrent = true;\n\n        dispatch({ type: \"setCurrentShip\", payload: copyOfShips });\n        return;\n      } else {\n        copyOfShips[i].isCurrent = false;\n      }\n    }\n  };\n\n  const updateCurrentShip = (method: string, arr: any) => {\n    let currentShip;\n    let copyOfShips = [...ships];\n    for (let i = 0; i < copyOfShips.length; i++) {\n      if (copyOfShips[i].isCurrent) {\n        currentShip = copyOfShips[i];\n\n        switch (method) {\n          case \"changeOrientation\":\n            if (currentShip.orientation === \"Vertical\") {\n              currentShip.orientation = \"Horizontal\";\n            } else {\n              currentShip.orientation = \"Vertical\";\n            }\n\n            dispatch({ type: \"updateCurrentShip\", payload: copyOfShips });\n            break;\n          case \"updateCoords\":\n            currentShip.coordinateArray = arr;\n            dispatch({ type: \"updateCurrentShip\", payload: copyOfShips });\n            break;\n          default:\n          // do something\n        }\n      }\n    }\n  };\n\n  const getCurrentShip = () => {\n    for (let i = 0; i < ships.length; i++) {\n      if (ships[i].isCurrent) {\n        return ships[i];\n      }\n    }\n  };\n\n  const ctx = {\n    currentShip: getCurrentShip,\n    updateCurrentShip,\n    setCurrentShip,\n    ships,\n  };\n\n  return <ShipContext.Provider value={ctx}>{children}</ShipContext.Provider>;\n};\n\nexport default ShipProvider;\n\nexport const useShip = () => useContext(ShipContext);\n","import React, { useContext, useState } from \"react\";\n\nconst initial = 25;\nconst SquareContext = React.createContext(initial);\n\nconst SquareSizeProvider = ({ children }: any) => {\n  const [squareSize, setSquareSize] = useState(initial);\n\n  const ctx: any = {\n    squareSize,\n    setSquareSize,\n  };\n\n  return (\n    <SquareContext.Provider value={ctx}>{children}</SquareContext.Provider>\n  );\n};\n\nexport default SquareSizeProvider;\n\nexport const useSquareSize = () => useContext(SquareContext);\n","import \"../../App.css\";\n\nimport { useShip } from \"../../context/ShipContext\";\n\nimport { BiRefresh } from \"react-icons/bi\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\nconst ShipPlacementInstructions: React.FC = () => {\n  const { squareSize }: any = useSquareSize();\n  let { ships, currentShip, updateCurrentShip } = useShip();\n\n  currentShip = currentShip();\n\n  const { name, length, orientation } = currentShip;\n\n  return (\n    <>\n      <h1 style={{ margin: \"8px\" }} className=\"instructionsHeader\">\n        Place your&nbsp;\n        <span\n          style={{\n            borderBottom: \"2px solid white\",\n          }}\n        >\n          {name}\n        </span>\n      </h1>\n      <ul\n        style={{\n          listStyleType: \"none\",\n          minWidth: \"300px\",\n          maxWidth: \"450px\",\n          padding: \"0\",\n        }}\n      >\n        <li\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <span>Length:</span>\n          <span className=\"instructionControls\">{length}&nbsp;tiles</span>\n        </li>\n        <li\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <span>Orientation:</span>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <span\n              style={{\n                textDecoration: \"underline\",\n                marginRight: \"10px\",\n              }}\n              className=\"instructionControls\"\n            >\n              {orientation}\n            </span>\n            <button\n              onClick={() => updateCurrentShip(\"changeOrientation\")}\n              className=\"orientationToggle\"\n            >\n              <BiRefresh color=\"white\" size=\"2rem\" />\n            </button>\n          </div>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default ShipPlacementInstructions;\n","const GameInstructions = () => {\n  return (\n    <div style={{ minHeight: \"150px\" }}>\n      <h1 style={{ margin: \"8px\" }} className=\"instructionsHeader\">\n        Take the shot!\n      </h1>\n    </div>\n  );\n};\n\nexport default GameInstructions;\n","import React, { useContext, useReducer } from \"react\";\n\nconst initial = { phase: \"enteringShips\" };\n\nconst GameContext = React.createContext(initial);\n\nconst GameContextProvider = ({ children }: any) => {\n  const reducer = (state: any, action: any) => {\n    switch (action.type) {\n      case \"changeGamePhase\":\n        return action.payload;\n    }\n  };\n\n  const [gameInfo, dispatch] = useReducer(reducer, initial);\n\n  const changeGamePhase = (phase: string) => {\n    let copyOfGameInfo = { ...gameInfo };\n\n    copyOfGameInfo.phase = phase;\n\n    dispatch({ type: \"changeGamePhase\", payload: copyOfGameInfo });\n  };\n\n  const ctx: any = {\n    gameInfo,\n    changeGamePhase,\n  };\n\n  return <GameContext.Provider value={ctx}>{children}</GameContext.Provider>;\n};\n\nexport default GameContextProvider;\n\nexport const useGameContext = () => useContext(GameContext);\n","import ShipPlacementInstructions from \"./ShipPlacementInstructions\";\nimport GameInstructions from \"./GameInstructions\";\n\nimport { useGameContext } from \"../../context/GameContext\";\n\nconst Instructions: React.FC = () => {\n  const { gameInfo }: any = useGameContext();\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"white\",\n        maxWidth: \"90vw\",\n      }}\n    >\n      {gameInfo.phase === \"enteringShips\" ? (\n        <ShipPlacementInstructions />\n      ) : (\n        <GameInstructions />\n      )}\n    </div>\n  );\n};\n\nexport default Instructions;\n","import { useSquareSize } from \"../../context/SquareSize\";\n\nconst Numbers: React.FC = () => {\n  const { squareSize }: any = useSquareSize();\n\n  let numbers = [];\n  for (let j = 0; j < 8; j++) {\n    numbers.push(\n      <div\n        key={j}\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          color: \"white\",\n          opacity: \"0.5\",\n        }}\n      >\n        {j + 1}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: squareSize + \"px\",\n        height: \"100%\",\n      }}\n    >\n      {numbers}\n    </div>\n  );\n};\n\nexport default Numbers;\n","import { useSquareSize } from \"../../context/SquareSize\";\n\nconst Letters: React.FC = () => {\n  const { squareSize }: any = useSquareSize();\n\n  let letters = [];\n\n  for (let i = 0; i < 9; i++) {\n    let inner: string | null = String.fromCharCode(i - 1 + 65);\n    if (i === 0) {\n      inner = null;\n    }\n    letters.push(\n      <div\n        key={i}\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          color: \"white\",\n          opacity: \"0.5\",\n        }}\n      >\n        {inner}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        height: squareSize + \"px\",\n        width: 9 * squareSize + \"px\",\n        display: \"flex\",\n      }}\n    >\n      {letters}\n    </div>\n  );\n};\n\nexport default Letters;\n","import { useOceanContext } from \"../../context/OceanContext\";\n\nimport { useShip } from \"../../context/ShipContext\";\n\nimport \"../../App.css\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\nimport { useEffect, useState } from \"react\";\n\nimport {\n  checkIfShipOutOfBounds,\n  getCoordArrayFromShip,\n} from \"../../helperFunctions\";\n\nimport { useGameContext } from \"../../context/GameContext\";\n\ninterface SquareProps {\n  squareValue: number;\n  coordinates: number[];\n  isHovering: any[];\n  setIsHovering: Function;\n  placementIsDisabled: boolean;\n  setPlacementIsDisabled: Function;\n  // setIsEnteringShips: Function;\n  // isEnteringShips: boolean;\n}\n\nconst EmptyTile: React.FC<SquareProps> = ({\n  squareValue,\n  coordinates,\n  isHovering,\n  setIsHovering,\n  placementIsDisabled,\n  setPlacementIsDisabled,\n  // setIsEnteringShips,\n  // isEnteringShips,\n}) => {\n  const { gameInfo, changeGamePhase }: any = useGameContext();\n  const { squareSize }: any = useSquareSize();\n  let { ships, currentShip, setCurrentShip, updateCurrentShip } = useShip();\n\n  currentShip = currentShip();\n\n  const { ocean, enterShips } = useOceanContext();\n\n  const shipTile = (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"var(--shipColor)\",\n      }}\n    ></div>\n  );\n\n  let inner: any = null;\n  let arr = getCoordArrayFromShip(\n    currentShip.length,\n    currentShip.orientation,\n    isHovering[0],\n    isHovering[1]\n  );\n\n  let handleClick: any = () => {\n    enterShips(arr, currentShip.orientation);\n    updateCurrentShip(\"updateCoords\", arr);\n    setCurrentShip(currentShip);\n    if (currentShip.name === \"Destroyer\") {\n      changeGamePhase(\"playing\");\n    }\n  };\n\n  useEffect(() => {\n    if (arr) {\n      let result = checkIfShipOutOfBounds(\n        arr,\n        shipTile,\n        inner,\n        handleClick,\n        coordinates,\n        ocean\n      );\n      handleClick = result.handleClick;\n\n      if (result.handleClick === null) {\n        setPlacementIsDisabled(() => true);\n      } else {\n        setPlacementIsDisabled(() => false);\n      }\n    }\n\n    if (arr == null) {\n      setPlacementIsDisabled(() => true);\n    }\n  }, [JSON.stringify(arr)]);\n\n  if (arr) {\n    let result2 = checkIfShipOutOfBounds(\n      arr,\n      shipTile,\n      inner,\n      handleClick,\n      coordinates,\n      ocean\n    );\n    inner = result2.inner;\n  }\n\n  return (\n    <div\n      onClick={placementIsDisabled ? null : handleClick}\n      onMouseEnter={() => setIsHovering([...coordinates])}\n      onMouseLeave={\n        gameInfo.phase === \"enteringShips\"\n          ? () => setIsHovering([null, null])\n          : undefined\n      }\n      style={{\n        width: squareSize + \"px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        overflow: \"hidden\",\n        cursor: \"none\",\n      }}\n    >\n      {inner}\n    </div>\n  );\n};\n\nexport default EmptyTile;\n","import { useSquareSize } from \"../../context/SquareSize\";\n\nconst GridOverlay = () => {\n  const { squareSize }: any = useSquareSize();\n\n  let columns: any = [];\n  let rows: any = [];\n\n  for (let i = 0; i < 8; i++) {\n    let borderRight = \"2px solid white\";\n    let borderBottom = \"2px solid white\";\n\n    if (i === 7) {\n      borderRight = \"none\";\n      borderBottom = \"none\";\n    }\n    columns.push(\n      <div\n        key={i}\n        style={{\n          width: squareSize + \"px\",\n          height: \"100%\",\n          borderRight,\n        }}\n      ></div>\n    );\n    rows.push(\n      <div key={i} style={{ width: \"100%\", height: \"50%\", borderBottom }}></div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        width: 8 * squareSize + \"px\",\n        height: 8 * squareSize + \"px\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        backgroundColor: \"transparent\",\n      }}\n    >\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n        }}\n      >\n        {columns}\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n        }}\n      >\n        {rows}\n      </div>\n    </div>\n  );\n};\n\nexport default GridOverlay;\n","import \"../../App.css\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\ninterface ShipTileProps {\n  shipColor: string;\n}\nconst ShipTile: React.FC<ShipTileProps> = ({ shipColor }) => {\n  const { squareSize }: any = useSquareSize();\n\n  return (\n    <div\n      style={{\n        width: squareSize + \"px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: shipColor,\n        overflow: \"hidden\",\n        cursor: \"none\",\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: shipColor,\n          overflow: \"hidden\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default ShipTile;\n","import \"../../App.css\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\ninterface EndPieceProps {\n  coordinates: number[];\n  squareValue: number;\n  shipColor: string;\n}\nconst EndPiece: React.FC<EndPieceProps> = ({\n  coordinates,\n  squareValue,\n  shipColor,\n}) => {\n  const { squareSize }: any = useSquareSize();\n  let direction;\n  let borderRight = \"none\";\n\n  switch (squareValue) {\n    case 2:\n      direction = \"pointLeft\";\n      break;\n    case 3:\n      direction = \"pointRight\";\n      borderRight = \"2px solid white\";\n      break;\n    case 4:\n      direction = \"pointUp\";\n      borderRight = \"2px solid white\";\n      break;\n    case 5:\n      direction = \"pointDown\";\n      break;\n    default:\n      direction = \"pointLeft\";\n  }\n\n  return (\n    <div\n      style={{\n        height: \"95%\",\n        width: squareSize + \"px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        cursor: \"none\",\n      }}\n    >\n      <div\n        style={{ backgroundColor: shipColor, borderColor: shipColor }}\n        className={`endPiece ${direction}`}\n      ></div>\n    </div>\n  );\n};\n\nexport default EndPiece;\n","import { useShip } from \"../../context/ShipContext\";\nimport ShipTile from \"../Square/ShipTile\";\nimport EndPiece from \"../Square/EndPiece\";\nimport { useSquareSize } from \"../../context/SquareSize\";\nimport \"../../App.css\";\n\ninterface HoverRefProps {\n  hoverRef: any;\n  placementIsDisabled: boolean;\n}\n\nconst HoveredShip: React.FC<HoverRefProps> = ({\n  hoverRef,\n  placementIsDisabled,\n}) => {\n  const { squareSize }: any = useSquareSize();\n  let { currentShip } = useShip();\n  currentShip = currentShip();\n\n  const orientation = currentShip.orientation;\n\n  let pieces = [];\n\n  let hoveredShipColor = \"var(--hoveredShipColor)\";\n  if (placementIsDisabled) {\n    hoveredShipColor = \"var(--disabledShipColor)\";\n  }\n\n  for (let i = 0; i < currentShip.length; i++) {\n    if (i === 0) {\n      if (orientation === \"Horizontal\") {\n        pieces.push(\n          <EndPiece\n            key={i}\n            coordinates={[3, 3]}\n            squareValue={2}\n            shipColor={hoveredShipColor}\n          />\n        );\n      } else {\n        pieces.push(\n          <EndPiece\n            key={i}\n            coordinates={[3, 3]}\n            squareValue={4}\n            shipColor={hoveredShipColor}\n          />\n        );\n      }\n    } else if (i === currentShip.length - 1) {\n      if (orientation === \"Horizontal\") {\n        pieces.push(\n          <EndPiece\n            key={i}\n            coordinates={[3, 3]}\n            squareValue={3}\n            shipColor={hoveredShipColor}\n          />\n        );\n      } else {\n        pieces.push(\n          <EndPiece\n            key={i}\n            coordinates={[3, 3]}\n            squareValue={5}\n            shipColor={hoveredShipColor}\n          />\n        );\n      }\n    } else {\n      pieces.push(<ShipTile key={i} shipColor={hoveredShipColor} />);\n    }\n  }\n\n  let resultArr = pieces.map((item, index) => {\n    return (\n      <div\n        key={index}\n        style={{\n          width: squareSize + \"px\",\n          height: squareSize + \"px\",\n          overflow: \"hidden\",\n        }}\n      >\n        {item}\n      </div>\n    );\n  });\n\n  return (\n    <div\n      ref={hoverRef}\n      style={{\n        position: \"absolute\",\n        display: \"flex\",\n        width: orientation === \"Vertical\" ? squareSize + \"px\" : \"auto\",\n        height: orientation === \"Vertical\" ? \"auto\" : squareSize + \"px\",\n        flexDirection: orientation === \"Vertical\" ? \"column\" : \"row\",\n        overflow: \"hidden\",\n        transform:\n          orientation === \"Horizontal\"\n            ? `translate(${-(squareSize + 15)}px, -50%)`\n            : `translate(-50%, ${-(squareSize + 10)}px)`,\n        visibility: \"hidden\",\n        cursor: \"none\",\n      }}\n    >\n      {resultArr}\n    </div>\n  );\n};\n\nexport default HoveredShip;\n","import { useOceanContext } from \"../../context/OceanContext\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\nimport \"../../App.css\";\n\nimport EmptyTile from \"../Square/EmptyTile\";\n\nimport { useState } from \"react\";\n\nimport GridOverlay from \"../GridOverlay/GridOverlay\";\n\nimport ShipTile from \"../Square/ShipTile\";\nimport EndPiece from \"../Square/EndPiece\";\nimport { useRef } from \"react\";\n\nimport HoveredShip from \"../HoveredShip/HoveredShip\";\n\nimport {\n  handleHover,\n  handleMouseEnter,\n  handleMouseLeave,\n} from \"../../helperFunctions\";\n\nimport { useGameContext } from \"../../context/GameContext\";\n\ninterface OceanProps {\n  // setIsEnteringShips: Function;\n  // isEnteringShips: boolean;\n  oceanRef: any;\n  oceanOffsetX: number | null;\n  oceanOffsetY: number | null;\n}\n\nconst Ocean: React.FC<OceanProps> = ({\n  oceanRef,\n  oceanOffsetX,\n  oceanOffsetY,\n}) => {\n  const { gameInfo }: any = useGameContext();\n  const hoverRef = useRef<HTMLDivElement>(null);\n\n  const { squareSize, setSquareSize }: any = useSquareSize();\n\n  const { ocean, computerOcean } = useOceanContext();\n\n  const [isHovering, setIsHovering] = useState([null, null]);\n\n  const [placementIsDisabled, setPlacementIsDisabled] = useState(true);\n\n  // const oceanToMap = isPlayer ? ocean : computerOcean;\n\n  return (\n    <>\n      <div\n        ref={oceanRef}\n        style={{\n          height: 8 * squareSize + \"px\",\n          width: 8 * squareSize + \"px\",\n          position: \"relative\",\n          overflow: \"hidden\",\n        }}\n        onMouseEnter={\n          gameInfo.phase === \"enteringShips\"\n            ? (e) => handleMouseEnter(hoverRef)\n            : undefined\n        }\n        onMouseMove={(e) =>\n          gameInfo.phase === \"enteringShips\"\n            ? handleHover(e, hoverRef, oceanOffsetX, oceanOffsetY)\n            : undefined\n        }\n        onMouseLeave={\n          gameInfo.phase === \"enteringShips\"\n            ? (e) => handleMouseLeave(hoverRef)\n            : undefined\n        }\n      >\n        <GridOverlay />\n        {gameInfo.phase === \"enteringShips\" && (\n          <HoveredShip\n            hoverRef={hoverRef}\n            placementIsDisabled={placementIsDisabled}\n          />\n        )}\n        {ocean.map((item: any, index1: any) => {\n          return (\n            <div\n              key={index1}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                width: \"100%\",\n                position: \"relative\",\n                height: squareSize + \"px\",\n              }}\n            >\n              {item.map((item: any, index2: any) => {\n                const coordinates = [index1, index2];\n\n                switch (item) {\n                  case 0:\n                    return (\n                      <EmptyTile\n                        key={index2}\n                        coordinates={coordinates}\n                        squareValue={item}\n                        isHovering={isHovering}\n                        setIsHovering={setIsHovering}\n                        placementIsDisabled={placementIsDisabled}\n                        setPlacementIsDisabled={setPlacementIsDisabled}\n                        // setIsEnteringShips={setIsEnteringShips}\n                        // isEnteringShips={isEnteringShips}\n                      />\n                    );\n                  case 1:\n                    return (\n                      <ShipTile key={index2} shipColor=\"var(--shipColor)\" />\n                    );\n                  default:\n                    return (\n                      <EndPiece\n                        key={index2}\n                        coordinates={coordinates}\n                        squareValue={item}\n                        shipColor=\"var(--shipColor)\"\n                      />\n                    );\n                }\n              })}\n            </div>\n          );\n        })}\n        {gameInfo.phase === \"playing\" && (\n          <div\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              position: \"absolute\",\n              top: \"0\",\n              left: \"0\",\n            }}\n          ></div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Ocean;\n","import Numbers from \"../Numbers/Numbers\";\nimport Letters from \"../Letters/Letters\";\nimport Ocean from \"../Ocean/Ocean\";\n\nimport { useEffect, useState, useRef } from \"react\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\nimport { useGameContext } from \"../../context/GameContext\";\n\ninterface UserGameboardProps {\n  size: string;\n}\n\nconst UserGameboard: React.FC<UserGameboardProps> = ({ size }) => {\n  const { gameInfo }: any = useGameContext();\n  const oceanRef = useRef<HTMLDivElement>(null);\n  const { squareSize, setSquareSize }: any = useSquareSize();\n\n  const [oceanOffsetX, setOceanOffsetX] = useState(0);\n  const [oceanOffsetY, setOceanOffsetY] = useState(0);\n\n  useEffect(() => {\n    if (window.innerWidth < 400) {\n      setSquareSize(38);\n    } else {\n      setSquareSize(50);\n    }\n\n    if (oceanRef.current) {\n      setOceanOffsetX(oceanRef.current.getBoundingClientRect().left);\n      setOceanOffsetY(oceanRef.current.getBoundingClientRect().top);\n    }\n  }, [window.innerWidth, oceanRef.current]);\n\n  let styles: any = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    transform: \"none\",\n    position: \"relative\",\n    transition: \"0.6s ease-in-out\",\n  };\n\n  if (size === \"small\") {\n    styles.position = \"absolute\";\n    styles.top = \"-63%\";\n    styles.left = \"0\";\n    styles.transform = \"scale(25%)\";\n  }\n\n  return (\n    <>\n      <div style={styles}>\n        <Letters />\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            height: 8 * squareSize + \"px\",\n          }}\n        >\n          <Numbers />\n          <Ocean\n            oceanRef={oceanRef}\n            oceanOffsetX={oceanOffsetX}\n            oceanOffsetY={oceanOffsetY}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UserGameboard;\n","import { BiTargetLock } from \"react-icons/bi\";\n\ninterface TargetCursorProps {\n  hoverRef: any;\n}\n\nconst TargetCursor: React.FC<TargetCursorProps> = ({ hoverRef }) => {\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        height: \"50px\",\n        width: \"50px\",\n        visibility: \"visible\",\n        transform: \"translate(-50%, -50%)\",\n        color: \"red\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        cursor: \"none\",\n      }}\n      ref={hoverRef}\n    >\n      <BiTargetLock size=\"2.3rem\" />\n    </div>\n  );\n};\n\nexport default TargetCursor;\n","import { ReactElement, ReactHTMLElement, useState } from \"react\";\n\nimport \"../../App.css\";\n\ninterface UnknownTileProps {\n  coordinates: any[];\n  squareValue: number;\n}\n\nconst UnknownTile: React.FC<UnknownTileProps> = ({\n  coordinates,\n  squareValue,\n}) => {\n  const [inner, setInner] = useState<string | ReactElement>(\"\");\n\n  const missedShot = (\n    <div\n      style={{\n        height: \"75%\",\n        width: \"75%\",\n        borderRadius: \"50%\",\n        opacity: \"0.5\",\n        border: \"solid white 2.5px\",\n      }}\n    ></div>\n  );\n\n  const hitShot = (\n    <div\n      style={{\n        height: \"75%\",\n        width: \"75%\",\n        borderRadius: \"50%\",\n        opacity: \"0.9\",\n        border: \"solid red 3px\",\n        backgroundColor: \"var(--disabledShipColor)\",\n      }}\n    ></div>\n  );\n\n  const handleClick = () => {\n    if (squareValue === 0) {\n      setInner(missedShot);\n    }\n    if (squareValue > 0) {\n      setInner(hitShot);\n    }\n  };\n\n  return (\n    <div\n      onClick={() => handleClick()}\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        color: \"white\",\n        cursor: \"none\",\n      }}\n    >\n      {inner}\n    </div>\n  );\n};\n\nexport default UnknownTile;\n","import { useOceanContext } from \"../../context/OceanContext\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\nimport \"../../App.css\";\n\nimport EmptyTile from \"../Square/EmptyTile\";\n\nimport { useState } from \"react\";\n\nimport GridOverlay from \"../GridOverlay/GridOverlay\";\n\nimport ShipTile from \"../Square/ShipTile\";\nimport EndPiece from \"../Square/EndPiece\";\nimport { useRef } from \"react\";\n\nimport HoveredShip from \"../HoveredShip/HoveredShip\";\nimport TargetCursor from \"../TargetCursor/TargetCursor\";\n\nimport {\n  handleHover,\n  handleMouseEnter,\n  handleMouseLeave,\n} from \"../../helperFunctions\";\n\nimport { useGameContext } from \"../../context/GameContext\";\n\nimport UnknownTile from \"../Square/UnknownTile\";\n\ninterface OceanProps {\n  // setIsEnteringShips: Function;\n  // isEnteringShips: boolean;\n  oceanRef: any;\n  oceanOffsetX: number | null;\n  oceanOffsetY: number | null;\n}\n\nconst ComputerOcean: React.FC<OceanProps> = ({\n  oceanRef,\n  oceanOffsetX,\n  oceanOffsetY,\n}) => {\n  const { gameInfo }: any = useGameContext();\n  const hoverRef = useRef<HTMLDivElement>(null);\n\n  const { squareSize, setSquareSize }: any = useSquareSize();\n\n  const { ocean, computerOcean } = useOceanContext();\n\n  const [isHovering, setIsHovering] = useState([null, null]);\n\n  const [placementIsDisabled, setPlacementIsDisabled] = useState(true);\n\n  return (\n    <>\n      <div\n        ref={oceanRef}\n        style={{\n          height: 8 * squareSize + \"px\",\n          width: 8 * squareSize + \"px\",\n          position: \"relative\",\n          overflow: \"hidden\",\n        }}\n        onMouseEnter={\n          // gameInfo.phase === \"enteringShips\"\n          //   ?\n          (e) => handleMouseEnter(hoverRef)\n          // : undefined\n        }\n        onMouseMove={\n          (e) =>\n            // gameInfo.phase === \"enteringShips\"\n            //   ?\n            handleHover(e, hoverRef, oceanOffsetX, oceanOffsetY)\n          // : undefined\n        }\n        onMouseLeave={\n          // gameInfo.phase === \"enteringShips\"\n          //   ?\n          (e) => handleMouseLeave(hoverRef)\n          // : undefined\n        }\n      >\n        <GridOverlay />\n        {/* {gameInfo.phase === \"enteringShips\" && (\n          <HoveredShip\n            hoverRef={hoverRef}\n            placementIsDisabled={placementIsDisabled}\n          />\n        )} */}\n        <TargetCursor hoverRef={hoverRef} />\n        {computerOcean.map((item: any, index1: any) => {\n          return (\n            <div\n              key={index1}\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                width: \"100%\",\n                position: \"relative\",\n                height: squareSize + \"px\",\n              }}\n            >\n              {item.map((item: any, index2: any) => {\n                const coordinates = [index1, index2];\n\n                return (\n                  <UnknownTile coordinates={coordinates} squareValue={item} />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default ComputerOcean;\n","import Numbers from \"../Numbers/Numbers\";\nimport Letters from \"../Letters/Letters\";\nimport ComputerOcean from \"../Ocean/ComputerOcean\";\n\nimport { useEffect, useState, useRef } from \"react\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\nimport { useGameContext } from \"../../context/GameContext\";\n\ninterface CompGameboardProps {\n  size: string;\n}\n\nconst ComputerGameboard: React.FC<CompGameboardProps> = ({ size }) => {\n  const { gameInfo }: any = useGameContext();\n  const oceanRef = useRef<HTMLDivElement>(null);\n  const { squareSize, setSquareSize }: any = useSquareSize();\n\n  const [oceanOffsetX, setOceanOffsetX] = useState(0);\n  const [oceanOffsetY, setOceanOffsetY] = useState(0);\n\n  useEffect(() => {\n    if (window.innerWidth < 400) {\n      setSquareSize(38);\n    } else {\n      setSquareSize(50);\n    }\n\n    if (oceanRef.current) {\n      setOceanOffsetX(oceanRef.current.getBoundingClientRect().left);\n      setOceanOffsetY(oceanRef.current.getBoundingClientRect().top);\n    }\n  }, [window.innerWidth, oceanRef.current]);\n\n  let styles: any = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    transform: \"none\",\n    position: \"relative\",\n    transition: \"0.6s ease-in-out\",\n  };\n\n  if (size === \"small\") {\n    styles.position = \"absolute\";\n    styles.top = \"-63%\";\n    styles.left = \"0\";\n    styles.transform = \"scale(25%)\";\n  }\n\n  return (\n    <>\n      <div style={styles}>\n        <Letters />\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            height: 8 * squareSize + \"px\",\n          }}\n        >\n          <Numbers />\n          <ComputerOcean\n            oceanRef={oceanRef}\n            oceanOffsetX={oceanOffsetX}\n            oceanOffsetY={oceanOffsetY}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ComputerGameboard;\n","import { useEffect, useState, useRef } from \"react\";\nimport WAVES from \"vanta/dist/vanta.waves.min.js\";\nimport Instructions from \"../Instructions/Instructions\";\nimport UserGameboard from \"../Gameboard/UserGameboard\";\nimport ComputerGameboard from \"../Gameboard/ComputerGameboard\";\nimport { useGameContext } from \"../../context/GameContext\";\n\nconst Waves = () => {\n  const { gameInfo }: any = useGameContext();\n\n  const [vantaEffect, setVantaEffect] = useState<any>(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        WAVES({\n          el: myRef.current,\n          mouseControls: false,\n          touchControls: false,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          scale: 1.0,\n          scaleMobile: 1.0,\n          color: 0x101e36,\n          waveHeight: 30.0,\n          waveSpeed: 0.4,\n          zoom: 0.81,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) vantaEffect.destroy();\n    };\n  }, [vantaEffect]);\n\n  const [isEnteringShips, setIsEnteringShips] = useState(true);\n\n  return (\n    <div\n      ref={myRef}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        width: \"100vw\",\n        height: \"700px\",\n      }}\n    >\n      <Instructions />\n\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          position: \"relative\",\n          width: \"450px\",\n          height: \"450px\",\n        }}\n      >\n        <UserGameboard\n          size={gameInfo.phase === \"enteringShips\" ? \"large\" : \"small\"}\n        />\n        {gameInfo.phase === \"playing\" && <ComputerGameboard size=\"large\" />}\n      </div>\n    </div>\n  );\n};\n\nexport default Waves;\n","import OceanProvider from \"./context/OceanContext\";\n\nimport ShipProvider from \"./context/ShipContext\";\n\nimport SquareSizeProvider from \"./context/SquareSize\";\n\nimport Waves from \"./components/Waves/Waves\";\n\nimport GameContextProvider from \"./context/GameContext\";\n\nconst App: React.FC = () => {\n  return (\n    <SquareSizeProvider>\n      <GameContextProvider>\n        <OceanProvider>\n          <ShipProvider>\n            <Waves />\n          </ShipProvider>\n        </OceanProvider>\n      </GameContextProvider>\n    </SquareSizeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}