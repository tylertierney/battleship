{"version":3,"sources":["helperFunctions.tsx","context/GameContext.tsx","context/ShipConstructor.tsx","context/ShipContext.tsx","context/SquareSize.tsx","components/Square/EmptyTile.tsx","components/GridOverlay/GridOverlay.tsx","components/Square/ShipTile.tsx","components/Square/EndPiece.tsx","components/HoveredShip/HoveredShip.tsx","components/Numbers/Numbers.tsx","components/Letters/Letters.tsx","components/Ocean/Ocean.tsx","components/Instructions/ShipPlacementInstructions.tsx","components/Instructions/GameInstructions.tsx","components/Instructions/Instructions.tsx","components/Waves/Waves.tsx","App.tsx","index.tsx"],"names":["checkIfShipOutOfBounds","arr","shipTile","inner","handleClick","coordinates","ocean","i","length","shipCoordX","coords","shipCoordY","style","width","height","backgroundColor","zIndex","initialOcean","Array","fill","map","OceanContext","React","createContext","OceanProvider","children","useReducer","state","action","type","payload","dispatch","ctx","enterCoordinates","copyOfOcean","enterShips","orientation","xVal","yVal","confirmShipPlacement","Provider","value","useGameContext","useContext","Ship","name","mainX","mainY","coordinateArray","isCurrent","this","initialShips","ShipContext","ShipProvider","ships","currentShip","updateCurrentShip","method","copyOfShips","setCurrentShip","ship","useShip","SquareContext","SquareSizeProvider","useState","squareSize","setSquareSize","useSquareSize","EmptyTile","squareValue","isHovering","setIsHovering","placementIsDisabled","setPlacementIsDisabled","setIsEnteringShips","targetX","targetY","isHit","getCoordArrayFromShip","useEffect","result","JSON","stringify","result2","onClick","onMouseEnter","onMouseLeave","display","justifyContent","alignItems","overflow","cursor","GridOverlay","columns","rows","borderRight","borderBottom","push","position","top","left","flexDirection","ShipTile","shipColor","EndPiece","direction","borderColor","className","HoveredShip","hoverRef","pieces","hoveredShipColor","resultArr","item","index","ref","transform","visibility","Numbers","numbers","Letters","letters","Ocean","useRef","oceanRef","oceanOffsetX","setOceanOffsetX","oceanOffsetY","setOceanOffsetY","window","innerWidth","current","getBoundingClientRect","String","fromCharCode","color","opacity","generateLetters","j","generateNumbers","e","onMouseMove","target","x","clientX","y","clientY","handleHover","index1","index2","ShipPlacementInstructions","margin","listStyleType","minWidth","maxWidth","padding","marginBottom","textDecoration","marginRight","size","GameInstructions","Instructions","isEnteringShips","Waves","vantaEffect","setVantaEffect","myRef","WAVES","el","mouseControls","touchControls","gyroControls","minHeight","scale","scaleMobile","waveHeight","waveSpeed","zoom","destroy","App","SquareSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5898888.chunk.js","sourcesContent":["import { ShipInterface } from \"./context/ShipContext\";\n\nimport { Ship } from \"./context/ShipConstructor\";\n\nexport const confirmShipPlacement = (\n  copyOfOcean: any,\n  arr: any,\n  orientation: any\n) => {\n  for (let i = 0; i < arr.length; i++) {\n    let xVal = arr[i].coords[0];\n    let yVal = arr[i].coords[1];\n\n    // If the tile is an end piece, determine whether it's up, right, left, or down\n    if (i === 0) {\n      if (orientation === \"Horizontal\") {\n        copyOfOcean[xVal][yVal] = 2;\n      } else {\n        copyOfOcean[xVal][yVal] = 4;\n      }\n    } else if (i === arr.length - 1) {\n      if (orientation === \"Horizontal\") {\n        copyOfOcean[xVal][yVal] = 3;\n      } else {\n        copyOfOcean[xVal][yVal] = 5;\n      }\n    } else {\n      copyOfOcean[xVal][yVal] = 1;\n    }\n  }\n  return copyOfOcean;\n};\n\nexport const checkIfShipOutOfBounds = (\n  arr: any,\n  shipTile: any,\n  inner: any,\n  handleClick: any,\n  coordinates: any,\n  ocean: any\n) => {\n  for (let i = 0; i < arr.length; i++) {\n    const shipCoordX = arr[i].coords[0];\n    const shipCoordY = arr[i].coords[1];\n\n    // This checks if a square is \"beneath\" the ship while it is hovering\n    if (shipCoordX === coordinates[0] && shipCoordY === coordinates[1]) {\n      // inner = shipTile;\n      inner = (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgb(0, 0, 0, 0.3)\",\n            zIndex: -1,\n          }}\n        ></div>\n      );\n    }\n\n    // This checks if any of the squares on the ship are out of bounds\n    if (shipCoordX < 0 || shipCoordX > 7) {\n      return { inner: null, handleClick: null };\n    }\n    if (shipCoordY < 0 || shipCoordY > 7) {\n      return { inner: null, handleClick: null };\n    }\n\n    if (ocean[shipCoordX][shipCoordY] != 0) {\n      inner = null;\n      handleClick = null;\n    }\n  }\n\n  return { inner, handleClick };\n};\n\nexport const getCoordArrayFromShip: any = (\n  length: number,\n  orientation: string,\n  targetX: number | null,\n  targetY: number | null\n) => {\n  if (targetX === null || targetY === null) {\n    return null;\n  }\n\n  let arr: any = Array(length).fill(0);\n  if (orientation === \"Vertical\") {\n    for (let i = -1; i < arr.length - 1; i++) {\n      arr[i + 1] = {\n        coords: [targetX + i, targetY],\n        isHit: false,\n      };\n    }\n  } else {\n    for (let i = -1; i < arr.length - 1; i++) {\n      arr[i + 1] = {\n        coords: [targetX, targetY + i],\n        isHit: false,\n      };\n    }\n  }\n  return arr;\n};\n\nexport const generateLetters = () => {\n  let letters = [];\n\n  for (let i = 0; i < 9; i++) {\n    let inner: string | null = String.fromCharCode(i - 1 + 65);\n    if (i === 0) {\n      inner = null;\n    }\n    letters.push(\n      <div\n        key={i}\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          color: \"white\",\n          opacity: \"0.5\",\n        }}\n      >\n        {inner}\n      </div>\n    );\n  }\n\n  return letters;\n};\n\nexport const generateNumbers = () => {\n  let numbers = [];\n  for (let j = 0; j < 8; j++) {\n    numbers.push(\n      <div\n        key={j}\n        style={{\n          height: \"100%\",\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          color: \"white\",\n          opacity: \"0.5\",\n        }}\n      >\n        {j + 1}\n      </div>\n    );\n  }\n  return numbers;\n};\n\nexport const handleHover = (\n  e: any,\n  ref: any,\n  oceanOffsetX: any,\n  oceanOffsetY: any\n) => {\n  const target = e.target;\n\n  const x = e.clientX - oceanOffsetX;\n  const y = e.clientY - oceanOffsetY;\n\n  ref = ref.current;\n\n  ref.style.top = y + \"px\";\n  ref.style.left = x + \"px\";\n};\n","import React, { useContext, useReducer } from \"react\";\n\nimport { confirmShipPlacement } from \"../helperFunctions\";\n\nimport { ShipInterface } from \"./ShipContext\";\n\nconst initialOcean: any = Array(8)\n  .fill(0)\n  .map(() => Array(8).fill(0));\n\nconst OceanContext = React.createContext(initialOcean);\n\nconst OceanProvider = ({ children }: any) => {\n  const reducer = (state: any, action: any) => {\n    switch (action.type) {\n      case \"enterCoordinates\":\n        return action.payload;\n      case \"enterShips\":\n        return action.payload;\n    }\n  };\n\n  const [ocean, dispatch] = useReducer(reducer, initialOcean);\n\n  const enterCoordinates = (coordinates: number[]) => {\n    const copyOfOcean = [...ocean];\n\n    dispatch({ type: \"enterCoordinates\", payload: copyOfOcean });\n  };\n\n  const enterShips = (arr: any, orientation: any) => {\n    let copyOfOcean = [...ocean];\n\n    copyOfOcean = confirmShipPlacement(copyOfOcean, arr, orientation);\n\n    dispatch({ type: \"enterShips\", payload: copyOfOcean });\n  };\n\n  const ctx = {\n    ocean,\n    enterCoordinates,\n    enterShips,\n  };\n\n  return <OceanContext.Provider value={ctx}>{children}</OceanContext.Provider>;\n};\n\nexport default OceanProvider;\n\nexport const useGameContext = () => useContext(OceanContext);\n","export class Ship {\n  name: string;\n  length: number;\n  orientation: string;\n  mainX: number | null;\n  mainY: number | null;\n  coordinateArray: number[][] | null;\n  isCurrent: boolean;\n\n  constructor(\n    name: string,\n    length: number,\n    orientation: string,\n    mainX: number | null,\n    mainY: number | null,\n    coordinateArray: number[][] | null,\n    isCurrent: boolean\n  ) {\n    this.name = name;\n    this.length = length;\n    this.orientation = orientation;\n    this.mainX = mainX;\n    this.mainY = mainY;\n    this.coordinateArray = coordinateArray;\n    this.isCurrent = isCurrent;\n  }\n}\n","import React, { useContext, useReducer } from \"react\";\n\nimport { Ship } from \"./ShipConstructor\";\n\nexport interface ShipInterface {\n  /**\n   * Name must be a string.\n   */\n  name: string;\n  /**\n   * Length must be an int;\n   */\n  length: number;\n  /**\n   * Orientation must be a string.\n   */\n  orientation: string;\n  /**\n   * MainX is the X value of the user-selected tile upon which to place the ship.\n   */\n  mainX: number | null;\n  /**\n   * MainY is the Y value of the user-selected tile upon which to place the ship.\n   */\n  mainY: number | null;\n  /**\n   * Coordinate Array is an array of arrays, each signifying coordinates\n   * where the ship is placed\n   */\n  coordinateArray: any[][];\n}\n\nconst initialShips: any = [\n  new Ship(\"Battleship\", 4, \"Horizontal\", null, null, null, true),\n  new Ship(\"Carrier\", 5, \"Horizontal\", null, null, null, false),\n  new Ship(\"Cruiser\", 3, \"Horizontal\", null, null, null, false),\n  new Ship(\"Submarine\", 3, \"Horizontal\", null, null, null, false),\n  new Ship(\"Destroyer\", 2, \"Horizontal\", null, null, null, false),\n];\n\nconst ShipContext = React.createContext(initialShips);\n\nconst ShipProvider = ({ children }: any) => {\n  const reducer = (state: any, action: any) => {\n    switch (action.type) {\n      case \"setCurrentShip\":\n        return action.payload;\n      case \"updateCurrentShip\":\n        return action.payload;\n    }\n  };\n\n  const [ships, dispatch] = useReducer(reducer, initialShips);\n\n  const setCurrentShip = (ship: ShipInterface) => {\n    let copyOfShips = [...ships];\n\n    for (let i = 0; i < copyOfShips.length; i++) {\n      if (ship.name === copyOfShips[i].name) {\n        if (i === copyOfShips.length - 1) {\n          // copyOfShips[i].isCurrent = false;\n          // copyOfShips[0].isCurrent = true;\n          dispatch({ type: \"setCurrentShip\", payload: copyOfShips });\n          return;\n        }\n        copyOfShips[i].isCurrent = false;\n        copyOfShips[i + 1].isCurrent = true;\n\n        dispatch({ type: \"setCurrentShip\", payload: copyOfShips });\n        return;\n      } else {\n        copyOfShips[i].isCurrent = false;\n      }\n    }\n  };\n\n  const updateCurrentShip = (method: string, arr: any) => {\n    let currentShip;\n    let copyOfShips = [...ships];\n    for (let i = 0; i < copyOfShips.length; i++) {\n      if (copyOfShips[i].isCurrent) {\n        currentShip = copyOfShips[i];\n\n        switch (method) {\n          case \"changeOrientation\":\n            if (currentShip.orientation === \"Vertical\") {\n              currentShip.orientation = \"Horizontal\";\n            } else {\n              currentShip.orientation = \"Vertical\";\n            }\n\n            dispatch({ type: \"updateCurrentShip\", payload: copyOfShips });\n            break;\n          case \"updateCoords\":\n            currentShip.coordinateArray = arr;\n            dispatch({ type: \"updateCurrentShip\", payload: copyOfShips });\n            break;\n          default:\n          // do something\n        }\n      }\n    }\n  };\n\n  const getCurrentShip = () => {\n    for (let i = 0; i < ships.length; i++) {\n      if (ships[i].isCurrent) {\n        return ships[i];\n      }\n    }\n  };\n\n  const ctx = {\n    currentShip: getCurrentShip,\n    updateCurrentShip,\n    setCurrentShip,\n    ships,\n  };\n\n  return <ShipContext.Provider value={ctx}>{children}</ShipContext.Provider>;\n};\n\nexport default ShipProvider;\n\nexport const useShip = () => useContext(ShipContext);\n","import React, { useContext, useState } from \"react\";\n\nconst initial = 50;\nconst SquareContext = React.createContext(initial);\n\nconst SquareSizeProvider = ({ children }: any) => {\n  const [squareSize, setSquareSize] = useState(initial);\n\n  const ctx: any = {\n    squareSize,\n    setSquareSize,\n  };\n\n  return (\n    <SquareContext.Provider value={ctx}>{children}</SquareContext.Provider>\n  );\n};\n\nexport default SquareSizeProvider;\n\nexport const useSquareSize = () => useContext(SquareContext);\n","import { useGameContext } from \"../../context/GameContext\";\n\nimport { useShip } from \"../../context/ShipContext\";\n\nimport \"../../App.css\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\nimport { useEffect, useState } from \"react\";\n\nimport {\n  checkIfShipOutOfBounds,\n  getCoordArrayFromShip,\n} from \"../../helperFunctions\";\n\ninterface SquareProps {\n  squareValue: number;\n  coordinates: number[];\n  isHovering: any[];\n  setIsHovering: Function;\n  placementIsDisabled: boolean;\n  setPlacementIsDisabled: Function;\n  setIsEnteringShips: Function;\n}\n\nconst EmptyTile: React.FC<SquareProps> = ({\n  squareValue,\n  coordinates,\n  isHovering,\n  setIsHovering,\n  placementIsDisabled,\n  setPlacementIsDisabled,\n  setIsEnteringShips,\n}) => {\n  const { squareSize }: any = useSquareSize();\n  let { ships, currentShip, setCurrentShip, updateCurrentShip } = useShip();\n\n  currentShip = currentShip();\n\n  const { ocean, enterShips } = useGameContext();\n\n  const shipTile = (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"var(--shipColor)\",\n      }}\n    ></div>\n  );\n\n  let inner: any = null;\n  let arr = getCoordArrayFromShip(\n    currentShip.length,\n    currentShip.orientation,\n    isHovering[0],\n    isHovering[1]\n  );\n\n  let handleClick: any = () => {\n    enterShips(arr, currentShip.orientation);\n    updateCurrentShip(\"updateCoords\", arr);\n    setCurrentShip(currentShip);\n    if (currentShip.name === \"Destroyer\") {\n      setIsEnteringShips(false);\n    }\n  };\n\n  useEffect(() => {\n    if (arr) {\n      let result = checkIfShipOutOfBounds(\n        arr,\n        shipTile,\n        inner,\n        handleClick,\n        coordinates,\n        ocean\n      );\n      // inner = result.inner;\n      handleClick = result.handleClick;\n\n      if (result.handleClick === null) {\n        setPlacementIsDisabled(() => true);\n      } else {\n        setPlacementIsDisabled(() => false);\n      }\n    }\n\n    if (arr == null) {\n      setPlacementIsDisabled(() => true);\n    }\n  }, [JSON.stringify(arr)]);\n\n  if (arr) {\n    let result2 = checkIfShipOutOfBounds(\n      arr,\n      shipTile,\n      inner,\n      handleClick,\n      coordinates,\n      ocean\n    );\n    inner = result2.inner;\n  }\n\n  return (\n    <div\n      onClick={placementIsDisabled ? null : handleClick}\n      onMouseEnter={() => setIsHovering([...coordinates])}\n      onMouseLeave={() => setIsHovering([null, null])}\n      style={{\n        width: squareSize + \"px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        // cursor: \"pointer\",\n        overflow: \"hidden\",\n        cursor: \"none\",\n      }}\n    >\n      {inner}\n    </div>\n  );\n};\n\nexport default EmptyTile;\n","import { useSquareSize } from \"../../context/SquareSize\";\n\nconst GridOverlay = () => {\n  const { squareSize }: any = useSquareSize();\n\n  let columns: any = [];\n  let rows: any = [];\n\n  for (let i = 0; i < 8; i++) {\n    let borderRight = \"2px solid white\";\n    let borderBottom = \"2px solid white\";\n\n    if (i === 7) {\n      borderRight = \"none\";\n      borderBottom = \"none\";\n    }\n    columns.push(\n      <div\n        key={i}\n        style={{\n          width: squareSize + \"px\",\n          height: \"100%\",\n          borderRight,\n        }}\n      ></div>\n    );\n    rows.push(\n      <div key={i} style={{ width: \"100%\", height: \"50%\", borderBottom }}></div>\n    );\n  }\n\n  return (\n    <div\n      style={{\n        width: 8 * squareSize + \"px\",\n        height: 8 * squareSize + \"px\",\n        position: \"absolute\",\n        top: \"0\",\n        left: \"0\",\n        backgroundColor: \"transparent\",\n      }}\n    >\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n        }}\n      >\n        {columns}\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n        }}\n      >\n        {rows}\n      </div>\n    </div>\n  );\n};\n\nexport default GridOverlay;\n","import \"../../App.css\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\ninterface ShipTileProps {\n  shipColor: string;\n}\nconst ShipTile: React.FC<ShipTileProps> = ({ shipColor }) => {\n  const { squareSize }: any = useSquareSize();\n\n  return (\n    <div\n      style={{\n        width: squareSize + \"px\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: shipColor,\n        overflow: \"hidden\",\n        cursor: \"none\",\n      }}\n    >\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          backgroundColor: shipColor,\n          overflow: \"hidden\",\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default ShipTile;\n","import \"../../App.css\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\ninterface EndPieceProps {\n  coordinates: number[];\n  squareValue: number;\n  shipColor: string;\n}\nconst EndPiece: React.FC<EndPieceProps> = ({\n  coordinates,\n  squareValue,\n  shipColor,\n}) => {\n  const { squareSize }: any = useSquareSize();\n  let direction;\n  let borderRight = \"none\";\n\n  switch (squareValue) {\n    case 2:\n      direction = \"pointLeft\";\n      break;\n    case 3:\n      direction = \"pointRight\";\n      borderRight = \"2px solid white\";\n      break;\n    case 4:\n      direction = \"pointUp\";\n      borderRight = \"2px solid white\";\n      break;\n    case 5:\n      direction = \"pointDown\";\n      break;\n    default:\n      direction = \"pointLeft\";\n  }\n\n  return (\n    <div\n      style={{\n        height: \"95%\",\n        width: squareSize + \"px\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        cursor: \"none\",\n      }}\n    >\n      <div\n        style={{ backgroundColor: shipColor, borderColor: shipColor }}\n        className={`endPiece ${direction}`}\n      ></div>\n    </div>\n  );\n};\n\nexport default EndPiece;\n","import { useShip } from \"../../context/ShipContext\";\nimport ShipTile from \"../Square/ShipTile\";\nimport EndPiece from \"../Square/EndPiece\";\nimport { useSquareSize } from \"../../context/SquareSize\";\nimport \"../../App.css\";\n\ninterface HoverRefProps {\n  hoverRef: any;\n  placementIsDisabled: boolean;\n}\n\nconst HoveredShip: React.FC<HoverRefProps> = ({\n  hoverRef,\n  placementIsDisabled,\n}) => {\n  const { squareSize }: any = useSquareSize();\n  let { currentShip } = useShip();\n  currentShip = currentShip();\n\n  const orientation = currentShip.orientation;\n\n  let pieces = [];\n\n  let hoveredShipColor = \"var(--hoveredShipColor)\";\n  if (placementIsDisabled) {\n    hoveredShipColor = \"rgb(173, 0, 0, 0.5)\";\n  }\n\n  for (let i = 0; i < currentShip.length; i++) {\n    if (i === 0) {\n      if (orientation === \"Horizontal\") {\n        pieces.push(\n          <EndPiece\n            key={i}\n            coordinates={[3, 3]}\n            squareValue={2}\n            shipColor={hoveredShipColor}\n          />\n        );\n      } else {\n        pieces.push(\n          <EndPiece\n            key={i}\n            coordinates={[3, 3]}\n            squareValue={4}\n            shipColor={hoveredShipColor}\n          />\n        );\n      }\n    } else if (i === currentShip.length - 1) {\n      if (orientation === \"Horizontal\") {\n        pieces.push(\n          <EndPiece\n            key={i}\n            coordinates={[3, 3]}\n            squareValue={3}\n            shipColor={hoveredShipColor}\n          />\n        );\n      } else {\n        pieces.push(\n          <EndPiece\n            key={i}\n            coordinates={[3, 3]}\n            squareValue={5}\n            shipColor={hoveredShipColor}\n          />\n        );\n      }\n    } else {\n      pieces.push(<ShipTile key={i} shipColor={hoveredShipColor} />);\n    }\n  }\n\n  let resultArr = pieces.map((item, index) => {\n    return (\n      <div\n        key={index}\n        style={{\n          width: squareSize + \"px\",\n          height: squareSize + \"px\",\n          overflow: \"hidden\",\n        }}\n      >\n        {item}\n      </div>\n    );\n  });\n\n  return (\n    <div\n      ref={hoverRef}\n      style={{\n        position: \"absolute\",\n        display: \"flex\",\n        width: orientation === \"Vertical\" ? squareSize + \"px\" : \"auto\",\n        height: orientation === \"Vertical\" ? \"auto\" : squareSize + \"px\",\n        flexDirection: orientation === \"Vertical\" ? \"column\" : \"row\",\n        overflow: \"hidden\",\n        transform:\n          orientation === \"Horizontal\"\n            ? `translate(${-(squareSize + 15)}px, -50%)`\n            : `translate(-50%, ${-(squareSize + 10)}px)`,\n        visibility: \"hidden\",\n        // zIndex: 2,\n        cursor: \"none\",\n      }}\n    >\n      {resultArr}\n    </div>\n  );\n};\n\nexport default HoveredShip;\n","import { useSquareSize } from \"../../context/SquareSize\";\n\ninterface NumbersProps {\n  numbers: any[];\n}\n\nconst Numbers: React.FC<NumbersProps> = ({ numbers }) => {\n  const { squareSize }: any = useSquareSize();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: squareSize + \"px\",\n        height: \"100%\",\n      }}\n    >\n      {numbers}\n    </div>\n  );\n};\n\nexport default Numbers;\n","import { useSquareSize } from \"../../context/SquareSize\";\n\ninterface LettersProps {\n  letters: any[];\n}\n\nconst Letters: React.FC<LettersProps> = ({ letters }) => {\n  const { squareSize }: any = useSquareSize();\n\n  return (\n    <div\n      style={{\n        height: squareSize + \"px\",\n        width: 9 * squareSize + \"px\",\n        display: \"flex\",\n      }}\n    >\n      {letters}\n    </div>\n  );\n};\n\nexport default Letters;\n","import { useGameContext } from \"../../context/GameContext\";\nimport { useShip } from \"../../context/ShipContext\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\nimport \"../../App.css\";\n\nimport EmptyTile from \"../Square/EmptyTile\";\n\nimport { useState } from \"react\";\n\nimport GridOverlay from \"../GridOverlay/GridOverlay\";\n\nimport ShipTile from \"../Square/ShipTile\";\nimport EndPiece from \"../Square/EndPiece\";\nimport { useEffect, useRef } from \"react\";\n\nimport { generateLetters, generateNumbers } from \"../../helperFunctions\";\n\nimport HoveredShip from \"../HoveredShip/HoveredShip\";\n\nimport { handleHover } from \"../../helperFunctions\";\n\nimport Numbers from \"../Numbers/Numbers\";\nimport Letters from \"../Letters/Letters\";\n\ninterface OceanProps {\n  setIsEnteringShips: Function;\n}\n\nconst Ocean: React.FC<OceanProps> = ({ setIsEnteringShips }) => {\n  const hoverRef = useRef<HTMLDivElement>(null);\n  const oceanRef = useRef<HTMLDivElement>(null);\n\n  const { squareSize, setSquareSize }: any = useSquareSize();\n\n  const [oceanOffsetX, setOceanOffsetX] = useState(0);\n  const [oceanOffsetY, setOceanOffsetY] = useState(0);\n\n  useEffect(() => {\n    if (window.innerWidth < 400) {\n      setSquareSize(38);\n    } else {\n      setSquareSize(50);\n    }\n\n    if (oceanRef.current) {\n      setOceanOffsetX(oceanRef.current.getBoundingClientRect().left);\n      setOceanOffsetY(oceanRef.current.getBoundingClientRect().top);\n    }\n  }, [window.innerWidth, oceanRef.current]);\n\n  const { ocean } = useGameContext();\n\n  const [isHovering, setIsHovering] = useState([null, null]);\n\n  let letters = generateLetters();\n  let numbers = generateNumbers();\n\n  const handleMouseEnter = () => {\n    if (hoverRef.current) {\n      hoverRef.current.style.display = \"flex\";\n      hoverRef.current.style.visibility = \"visible\";\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (hoverRef.current) {\n      hoverRef.current.style.display = \"none\";\n      hoverRef.current.style.visibility = \"hidden\";\n    }\n  };\n\n  const [placementIsDisabled, setPlacementIsDisabled] = useState(true);\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n        }}\n      >\n        <Letters letters={letters} />\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            height: 8 * squareSize + \"px\",\n          }}\n        >\n          <Numbers numbers={numbers} />\n          <div\n            ref={oceanRef}\n            style={{\n              height: 8 * squareSize + \"px\",\n              width: 8 * squareSize + \"px\",\n              position: \"relative\",\n              overflow: \"hidden\",\n            }}\n            onMouseEnter={(e) => handleMouseEnter()}\n            onMouseMove={(e) =>\n              handleHover(e, hoverRef, oceanOffsetX, oceanOffsetY)\n            }\n            onMouseLeave={(e) => handleMouseLeave()}\n          >\n            <GridOverlay />\n            <HoveredShip\n              hoverRef={hoverRef}\n              placementIsDisabled={placementIsDisabled}\n            />\n            {ocean.map((item: any, index1: any) => {\n              return (\n                <div\n                  key={index1}\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    width: \"100%\",\n                    position: \"relative\",\n                    height: squareSize + \"px\",\n                    // zIndex: 1,\n                  }}\n                >\n                  {item.map((item: any, index2: any) => {\n                    const coordinates = [index1, index2];\n\n                    switch (item) {\n                      case 0:\n                        return (\n                          <EmptyTile\n                            key={index2}\n                            coordinates={coordinates}\n                            squareValue={item}\n                            isHovering={isHovering}\n                            setIsHovering={setIsHovering}\n                            placementIsDisabled={placementIsDisabled}\n                            setPlacementIsDisabled={setPlacementIsDisabled}\n                            setIsEnteringShips={setIsEnteringShips}\n                          />\n                        );\n                      case 1:\n                        return (\n                          <ShipTile key={index2} shipColor=\"var(--shipColor)\" />\n                        );\n                      default:\n                        return (\n                          <EndPiece\n                            key={index2}\n                            coordinates={coordinates}\n                            squareValue={item}\n                            shipColor=\"var(--shipColor)\"\n                          />\n                        );\n                    }\n                  })}\n                </div>\n              );\n            })}\n            {/* <HoveredShip\n              hoverRef={hoverRef}\n              placementIsDisabled={placementIsDisabled}\n            /> */}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Ocean;\n","import \"../../App.css\";\n\nimport { useShip } from \"../../context/ShipContext\";\n\nimport { BiRefresh } from \"react-icons/bi\";\n\nimport { useSquareSize } from \"../../context/SquareSize\";\n\nconst ShipPlacementInstructions: React.FC = () => {\n  const { squareSize }: any = useSquareSize();\n  let { ships, currentShip, updateCurrentShip } = useShip();\n\n  currentShip = currentShip();\n\n  const { name, length, orientation } = currentShip;\n\n  return (\n    <>\n      <h1 style={{ margin: \"8px\" }} className=\"instructionsHeader\">\n        Place your&nbsp;\n        <span\n          style={{\n            borderBottom: \"2px solid white\",\n          }}\n        >\n          {name}\n        </span>\n      </h1>\n      <ul\n        style={{\n          listStyleType: \"none\",\n          minWidth: \"300px\",\n          maxWidth: \"450px\",\n          padding: \"0\",\n        }}\n      >\n        <li\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <span>Length:</span>\n          <span className=\"instructionControls\">{length}&nbsp;tiles</span>\n        </li>\n        <li\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <span>Orientation:</span>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <span\n              style={{\n                textDecoration: \"underline\",\n                marginRight: \"10px\",\n              }}\n              className=\"instructionControls\"\n            >\n              {orientation}\n            </span>\n            <button\n              onClick={() => updateCurrentShip(\"changeOrientation\")}\n              className=\"orientationToggle\"\n            >\n              <BiRefresh color=\"white\" size=\"2rem\" />\n            </button>\n          </div>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default ShipPlacementInstructions;\n","const GameInstructions = () => {\n  return <div>hi</div>;\n};\n\nexport default GameInstructions;\n","import ShipPlacementInstructions from \"./ShipPlacementInstructions\";\nimport GameInstructions from \"./GameInstructions\";\n\ninterface InstructionProps {\n  isEnteringShips: boolean;\n}\n\nconst Instructions: React.FC<InstructionProps> = ({ isEnteringShips }) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        color: \"white\",\n        maxWidth: \"90vw\",\n      }}\n    >\n      {isEnteringShips ? <ShipPlacementInstructions /> : <GameInstructions />}\n    </div>\n  );\n};\n\nexport default Instructions;\n","import { useEffect, useState, useRef } from \"react\";\nimport WAVES from \"vanta/dist/vanta.waves.min.js\";\n\nimport Ocean from \"../Ocean/Ocean\";\nimport Instructions from \"../Instructions/Instructions\";\n\nconst Waves = () => {\n  const [vantaEffect, setVantaEffect] = useState<any>(0);\n  const myRef = useRef(null);\n  useEffect(() => {\n    if (!vantaEffect) {\n      setVantaEffect(\n        WAVES({\n          el: myRef.current,\n          mouseControls: false,\n          touchControls: false,\n          gyroControls: false,\n          minHeight: 200.0,\n          minWidth: 200.0,\n          scale: 1.0,\n          scaleMobile: 1.0,\n          // color: 0x191b1e,\n          color: 0x101e36,\n          waveHeight: 30.0,\n          waveSpeed: 0.4,\n          zoom: 0.81,\n        })\n      );\n    }\n    return () => {\n      if (vantaEffect) vantaEffect.destroy();\n    };\n  }, [vantaEffect]);\n\n  const [isEnteringShips, setIsEnteringShips] = useState(true);\n\n  return (\n    <div\n      ref={myRef}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        width: \"100vw\",\n        height: \"700px\",\n      }}\n    >\n      <Instructions isEnteringShips={isEnteringShips} />\n      <Ocean setIsEnteringShips={setIsEnteringShips} />\n    </div>\n  );\n};\n\nexport default Waves;\n","import OceanProvider from \"./context/GameContext\";\n\nimport ShipProvider from \"./context/ShipContext\";\n\nimport SquareSizeProvider from \"./context/SquareSize\";\n\nimport Waves from \"./components/Waves/Waves\";\n\nconst App: React.FC = () => {\n  return (\n    <SquareSizeProvider>\n      <OceanProvider>\n        <ShipProvider>\n          <Waves />\n        </ShipProvider>\n      </OceanProvider>\n    </SquareSizeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}